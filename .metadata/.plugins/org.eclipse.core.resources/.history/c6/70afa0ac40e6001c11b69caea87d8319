grammar org.xtext.example.mydsl.ExTwentyOne with org.eclipse.xtext.common.Terminals

generate exTwentyOne "http://www.xtext.org/example/mydsl/ExTwentyOne"

X21: ('program' ID declarations += Declaration)*;

Declaration: Function | Input | Node | Stream | DataDecl | Parameter;

Parameter: 'parameter' ID ':' Type;

Function: 'function' ID Lambda;

Lambda: '(' ID ':' Type ')' '{' Exp '}';

Input: 'input' name=ID ':' Type;

Node: 'node' ID '[' (ID | Lambda) ']';

Stream: 'stream' inputs += [Input] (',' inputs += [Input])* ('to' targetElements+=Element (',' targetElements+=Element)* )+;

Element: {Element} name=ID | '[' (ID | Lambda) ']' | 'output' ID;

DataDecl: 'data' ID '{' ID ':' Type (',' ID ':' Type)* '}';

Type: 'int' | 'string' | ID;

Exp: Exp '+' Exp | Exp '-' Exp | Exp '*' Exp | Exp '/' Exp
| INT | '(' Exp ')' | 'let' ID '=' Exp 'in' Exp 'end'
| ID ( '.' ID )* | 'none' | 'if' LogicExp 'then' Exp 'else' Exp 'end'
| 'new' ID '[' ID '=' Exp (',' ID '=' Exp)* ']';


LogicExp: Exp ('=' | '<' | '>' | '<=' | '>=') Exp;

Exp returns Expression:
	Factor (( {Plus.left=current} '+' | {Minus.left=current}  '-' ) right=Factor)*
;

Factor returns Expression:
	Primary (({Mult.left=current} '*' | {Div.left=current}  '/'  ) right=Primary)*
;

Primary returns Expression:
	{MathNumber} value=INT  | '(' Exp ')'  |  VariableUse | LetBinding | 'none'
;

LetBinding:
	'let' name=ID '=' binding=Exp 'in' body=Exp 'end'
;

Binding:
	VarBinding | LetBinding
;

VariableUse:
	ref = [Binding]
;

VarBinding:
	'var' name=ID '=' expression=Exp
;