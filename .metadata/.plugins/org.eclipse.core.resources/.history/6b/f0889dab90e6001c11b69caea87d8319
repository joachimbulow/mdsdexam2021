grammar org.xtext.example.mydsl.ExTwentyOne with org.eclipse.xtext.common.Terminals

generate exTwentyOne "http://www.xtext.org/example/mydsl/ExTwentyOne"

Program: 'program' name=ID (declarations+=Declaration)*
;

Declaration: 
	Function | Input | Node | Stream | DataDecl | Parameter
;

Parameter: 
	'parameter' name=ID ':' Type
;

Function: 
	{Function} 'function' name=ID lambda=Lambda	
;

Lambda:
	{Lambda} '(' name=ID ':' Type ')' '{' lambdaExp=Exp '}'
;

Input:
	{Input} 'input' name=ID ':' Type
;

Node:
	{Node} 'node' name=ID '[' (function = [Function] | lambda = Lambda) ']'
;

Stream:
	{Stream} 'stream' inputsOrNodes+=[InputOrNode] (',' inputsOrNodes+=[InputOrNode])* ('to' elements+=Element (',' elements+=Element)* )+
;

Element: 
	{Element} element=ID | '[' (node=[NodeOrFunction] | Lambda) ']' | 'output' output=ID
;

DataDecl:
	{DataDecl} 'data' name=ID '{' data+=ID ':' Type (',' data+=ID ':' Type)* '}'
;

Type: 
	'int' | 'string' | ID | INT
;

InputOrNode:
	Input | Node
;

NodeOrFunction:
	Node | Function
;

Exp returns Expression: 
 Primary (({Plus.left=current} '+'| {Minus.left=current} '-'  | {Mult.left=current} '*'  | {Divide.left=current} '/' ) right=Primary)*
;

// WHat is this rule? ID ( '.' ID )*

Primary returns Expression:
 Type | LetBinding | IfThenElse | 'none' | '(' Exp ')' | NewInput | DataAccess
;

DataAccess:
	{DataAccess} accessedData=[DataDecl] '.' accessedField=[DataDecl]
;

IfThenElse returns Expression:
 'if' ifLogicExp=LogicExp 'then' thenExp=Exp 'else' elseExp=Exp 'end'	
;

NewInput:
	'new' newArrayId=ID '[' newArrayIds+=ID '=' newArrayExps+=Exp (',' newArrayIds+=ID '=' newArrayExps+=Exp)* ']'
;

LetBinding returns Expression:
	'let' name=ID '=' binding=Exp 'in' body=Exp 'end'
;

LogicExp: 
	leftLogic=Exp ('=' | '<' | '>' | '<=' | '>=') rightLogic=Exp
;