/**
 * generated by Xtext 2.26.0
 */
package org.xtext.example.mydsl.exTwentyOne.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl.exTwentyOne.ExTwentyOnePackage;
import org.xtext.example.mydsl.exTwentyOne.Type;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Type</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.exTwentyOne.impl.TypeImpl#getIntIdentifier <em>Int Identifier</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.exTwentyOne.impl.TypeImpl#getStringValue <em>String Value</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.exTwentyOne.impl.TypeImpl#getId <em>Id</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.exTwentyOne.impl.TypeImpl#getIntValue <em>Int Value</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.exTwentyOne.impl.TypeImpl#getNoneValue <em>None Value</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TypeImpl extends ExpressionImpl implements Type
{
  /**
   * The default value of the '{@link #getIntIdentifier() <em>Int Identifier</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIntIdentifier()
   * @generated
   * @ordered
   */
  protected static final String INT_IDENTIFIER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIntIdentifier() <em>Int Identifier</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIntIdentifier()
   * @generated
   * @ordered
   */
  protected String intIdentifier = INT_IDENTIFIER_EDEFAULT;

  /**
   * The default value of the '{@link #getStringValue() <em>String Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStringValue()
   * @generated
   * @ordered
   */
  protected static final String STRING_VALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getStringValue() <em>String Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStringValue()
   * @generated
   * @ordered
   */
  protected String stringValue = STRING_VALUE_EDEFAULT;

  /**
   * The default value of the '{@link #getId() <em>Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected static final String ID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getId() <em>Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected String id = ID_EDEFAULT;

  /**
   * The default value of the '{@link #getIntValue() <em>Int Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIntValue()
   * @generated
   * @ordered
   */
  protected static final int INT_VALUE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getIntValue() <em>Int Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIntValue()
   * @generated
   * @ordered
   */
  protected int intValue = INT_VALUE_EDEFAULT;

  /**
   * The default value of the '{@link #getNoneValue() <em>None Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNoneValue()
   * @generated
   * @ordered
   */
  protected static final String NONE_VALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNoneValue() <em>None Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNoneValue()
   * @generated
   * @ordered
   */
  protected String noneValue = NONE_VALUE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TypeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ExTwentyOnePackage.Literals.TYPE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getIntIdentifier()
  {
    return intIdentifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIntIdentifier(String newIntIdentifier)
  {
    String oldIntIdentifier = intIdentifier;
    intIdentifier = newIntIdentifier;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ExTwentyOnePackage.TYPE__INT_IDENTIFIER, oldIntIdentifier, intIdentifier));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getStringValue()
  {
    return stringValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStringValue(String newStringValue)
  {
    String oldStringValue = stringValue;
    stringValue = newStringValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ExTwentyOnePackage.TYPE__STRING_VALUE, oldStringValue, stringValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getId()
  {
    return id;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setId(String newId)
  {
    String oldId = id;
    id = newId;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ExTwentyOnePackage.TYPE__ID, oldId, id));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getIntValue()
  {
    return intValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIntValue(int newIntValue)
  {
    int oldIntValue = intValue;
    intValue = newIntValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ExTwentyOnePackage.TYPE__INT_VALUE, oldIntValue, intValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getNoneValue()
  {
    return noneValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNoneValue(String newNoneValue)
  {
    String oldNoneValue = noneValue;
    noneValue = newNoneValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ExTwentyOnePackage.TYPE__NONE_VALUE, oldNoneValue, noneValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ExTwentyOnePackage.TYPE__INT_IDENTIFIER:
        return getIntIdentifier();
      case ExTwentyOnePackage.TYPE__STRING_VALUE:
        return getStringValue();
      case ExTwentyOnePackage.TYPE__ID:
        return getId();
      case ExTwentyOnePackage.TYPE__INT_VALUE:
        return getIntValue();
      case ExTwentyOnePackage.TYPE__NONE_VALUE:
        return getNoneValue();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ExTwentyOnePackage.TYPE__INT_IDENTIFIER:
        setIntIdentifier((String)newValue);
        return;
      case ExTwentyOnePackage.TYPE__STRING_VALUE:
        setStringValue((String)newValue);
        return;
      case ExTwentyOnePackage.TYPE__ID:
        setId((String)newValue);
        return;
      case ExTwentyOnePackage.TYPE__INT_VALUE:
        setIntValue((Integer)newValue);
        return;
      case ExTwentyOnePackage.TYPE__NONE_VALUE:
        setNoneValue((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ExTwentyOnePackage.TYPE__INT_IDENTIFIER:
        setIntIdentifier(INT_IDENTIFIER_EDEFAULT);
        return;
      case ExTwentyOnePackage.TYPE__STRING_VALUE:
        setStringValue(STRING_VALUE_EDEFAULT);
        return;
      case ExTwentyOnePackage.TYPE__ID:
        setId(ID_EDEFAULT);
        return;
      case ExTwentyOnePackage.TYPE__INT_VALUE:
        setIntValue(INT_VALUE_EDEFAULT);
        return;
      case ExTwentyOnePackage.TYPE__NONE_VALUE:
        setNoneValue(NONE_VALUE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ExTwentyOnePackage.TYPE__INT_IDENTIFIER:
        return INT_IDENTIFIER_EDEFAULT == null ? intIdentifier != null : !INT_IDENTIFIER_EDEFAULT.equals(intIdentifier);
      case ExTwentyOnePackage.TYPE__STRING_VALUE:
        return STRING_VALUE_EDEFAULT == null ? stringValue != null : !STRING_VALUE_EDEFAULT.equals(stringValue);
      case ExTwentyOnePackage.TYPE__ID:
        return ID_EDEFAULT == null ? id != null : !ID_EDEFAULT.equals(id);
      case ExTwentyOnePackage.TYPE__INT_VALUE:
        return intValue != INT_VALUE_EDEFAULT;
      case ExTwentyOnePackage.TYPE__NONE_VALUE:
        return NONE_VALUE_EDEFAULT == null ? noneValue != null : !NONE_VALUE_EDEFAULT.equals(noneValue);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (intIdentifier: ");
    result.append(intIdentifier);
    result.append(", stringValue: ");
    result.append(stringValue);
    result.append(", id: ");
    result.append(id);
    result.append(", intValue: ");
    result.append(intValue);
    result.append(", noneValue: ");
    result.append(noneValue);
    result.append(')');
    return result.toString();
  }

} //TypeImpl
