/**
 * generated by Xtext 2.26.0
 */
package org.xtext.example.mydsl.exTwentyOne.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.exTwentyOne.ExTwentyOnePackage;
import org.xtext.example.mydsl.exTwentyOne.Expression;
import org.xtext.example.mydsl.exTwentyOne.NewInput;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>New Input</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.exTwentyOne.impl.NewInputImpl#getNewArrayId <em>New Array Id</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.exTwentyOne.impl.NewInputImpl#getNewArrayIds <em>New Array Ids</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.exTwentyOne.impl.NewInputImpl#getNewArrayExps <em>New Array Exps</em>}</li>
 * </ul>
 *
 * @generated
 */
public class NewInputImpl extends ExpressionImpl implements NewInput
{
  /**
   * The default value of the '{@link #getNewArrayId() <em>New Array Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNewArrayId()
   * @generated
   * @ordered
   */
  protected static final String NEW_ARRAY_ID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNewArrayId() <em>New Array Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNewArrayId()
   * @generated
   * @ordered
   */
  protected String newArrayId = NEW_ARRAY_ID_EDEFAULT;

  /**
   * The cached value of the '{@link #getNewArrayIds() <em>New Array Ids</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNewArrayIds()
   * @generated
   * @ordered
   */
  protected EList<String> newArrayIds;

  /**
   * The cached value of the '{@link #getNewArrayExps() <em>New Array Exps</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNewArrayExps()
   * @generated
   * @ordered
   */
  protected EList<Expression> newArrayExps;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected NewInputImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ExTwentyOnePackage.Literals.NEW_INPUT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getNewArrayId()
  {
    return newArrayId;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNewArrayId(String newNewArrayId)
  {
    String oldNewArrayId = newArrayId;
    newArrayId = newNewArrayId;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ExTwentyOnePackage.NEW_INPUT__NEW_ARRAY_ID, oldNewArrayId, newArrayId));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getNewArrayIds()
  {
    if (newArrayIds == null)
    {
      newArrayIds = new EDataTypeEList<String>(String.class, this, ExTwentyOnePackage.NEW_INPUT__NEW_ARRAY_IDS);
    }
    return newArrayIds;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Expression> getNewArrayExps()
  {
    if (newArrayExps == null)
    {
      newArrayExps = new EObjectContainmentEList<Expression>(Expression.class, this, ExTwentyOnePackage.NEW_INPUT__NEW_ARRAY_EXPS);
    }
    return newArrayExps;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ExTwentyOnePackage.NEW_INPUT__NEW_ARRAY_EXPS:
        return ((InternalEList<?>)getNewArrayExps()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ExTwentyOnePackage.NEW_INPUT__NEW_ARRAY_ID:
        return getNewArrayId();
      case ExTwentyOnePackage.NEW_INPUT__NEW_ARRAY_IDS:
        return getNewArrayIds();
      case ExTwentyOnePackage.NEW_INPUT__NEW_ARRAY_EXPS:
        return getNewArrayExps();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ExTwentyOnePackage.NEW_INPUT__NEW_ARRAY_ID:
        setNewArrayId((String)newValue);
        return;
      case ExTwentyOnePackage.NEW_INPUT__NEW_ARRAY_IDS:
        getNewArrayIds().clear();
        getNewArrayIds().addAll((Collection<? extends String>)newValue);
        return;
      case ExTwentyOnePackage.NEW_INPUT__NEW_ARRAY_EXPS:
        getNewArrayExps().clear();
        getNewArrayExps().addAll((Collection<? extends Expression>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ExTwentyOnePackage.NEW_INPUT__NEW_ARRAY_ID:
        setNewArrayId(NEW_ARRAY_ID_EDEFAULT);
        return;
      case ExTwentyOnePackage.NEW_INPUT__NEW_ARRAY_IDS:
        getNewArrayIds().clear();
        return;
      case ExTwentyOnePackage.NEW_INPUT__NEW_ARRAY_EXPS:
        getNewArrayExps().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ExTwentyOnePackage.NEW_INPUT__NEW_ARRAY_ID:
        return NEW_ARRAY_ID_EDEFAULT == null ? newArrayId != null : !NEW_ARRAY_ID_EDEFAULT.equals(newArrayId);
      case ExTwentyOnePackage.NEW_INPUT__NEW_ARRAY_IDS:
        return newArrayIds != null && !newArrayIds.isEmpty();
      case ExTwentyOnePackage.NEW_INPUT__NEW_ARRAY_EXPS:
        return newArrayExps != null && !newArrayExps.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (newArrayId: ");
    result.append(newArrayId);
    result.append(", newArrayIds: ");
    result.append(newArrayIds);
    result.append(')');
    return result.toString();
  }

} //NewInputImpl
