/**
 * generated by Xtext 2.26.0
 */
package org.xtext.example.mydsl.exTwentyOne.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.exTwentyOne.ExTwentyOnePackage;
import org.xtext.example.mydsl.exTwentyOne.Expression;
import org.xtext.example.mydsl.exTwentyOne.LogicExp;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Expression</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.exTwentyOne.impl.ExpressionImpl#getAccessedData <em>Accessed Data</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.exTwentyOne.impl.ExpressionImpl#getAccessedField <em>Accessed Field</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.exTwentyOne.impl.ExpressionImpl#getIfLogicExp <em>If Logic Exp</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.exTwentyOne.impl.ExpressionImpl#getThenExp <em>Then Exp</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.exTwentyOne.impl.ExpressionImpl#getElseExp <em>Else Exp</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.exTwentyOne.impl.ExpressionImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.exTwentyOne.impl.ExpressionImpl#getBinding <em>Binding</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.exTwentyOne.impl.ExpressionImpl#getBody <em>Body</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ExpressionImpl extends MinimalEObjectImpl.Container implements Expression
{
  /**
   * The default value of the '{@link #getAccessedData() <em>Accessed Data</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAccessedData()
   * @generated
   * @ordered
   */
  protected static final String ACCESSED_DATA_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAccessedData() <em>Accessed Data</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAccessedData()
   * @generated
   * @ordered
   */
  protected String accessedData = ACCESSED_DATA_EDEFAULT;

  /**
   * The default value of the '{@link #getAccessedField() <em>Accessed Field</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAccessedField()
   * @generated
   * @ordered
   */
  protected static final String ACCESSED_FIELD_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAccessedField() <em>Accessed Field</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAccessedField()
   * @generated
   * @ordered
   */
  protected String accessedField = ACCESSED_FIELD_EDEFAULT;

  /**
   * The cached value of the '{@link #getIfLogicExp() <em>If Logic Exp</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIfLogicExp()
   * @generated
   * @ordered
   */
  protected LogicExp ifLogicExp;

  /**
   * The cached value of the '{@link #getThenExp() <em>Then Exp</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getThenExp()
   * @generated
   * @ordered
   */
  protected Expression thenExp;

  /**
   * The cached value of the '{@link #getElseExp() <em>Else Exp</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElseExp()
   * @generated
   * @ordered
   */
  protected Expression elseExp;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getBinding() <em>Binding</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBinding()
   * @generated
   * @ordered
   */
  protected Expression binding;

  /**
   * The cached value of the '{@link #getBody() <em>Body</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBody()
   * @generated
   * @ordered
   */
  protected Expression body;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ExpressionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ExTwentyOnePackage.Literals.EXPRESSION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAccessedData()
  {
    return accessedData;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAccessedData(String newAccessedData)
  {
    String oldAccessedData = accessedData;
    accessedData = newAccessedData;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ExTwentyOnePackage.EXPRESSION__ACCESSED_DATA, oldAccessedData, accessedData));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAccessedField()
  {
    return accessedField;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAccessedField(String newAccessedField)
  {
    String oldAccessedField = accessedField;
    accessedField = newAccessedField;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ExTwentyOnePackage.EXPRESSION__ACCESSED_FIELD, oldAccessedField, accessedField));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LogicExp getIfLogicExp()
  {
    return ifLogicExp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIfLogicExp(LogicExp newIfLogicExp, NotificationChain msgs)
  {
    LogicExp oldIfLogicExp = ifLogicExp;
    ifLogicExp = newIfLogicExp;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ExTwentyOnePackage.EXPRESSION__IF_LOGIC_EXP, oldIfLogicExp, newIfLogicExp);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIfLogicExp(LogicExp newIfLogicExp)
  {
    if (newIfLogicExp != ifLogicExp)
    {
      NotificationChain msgs = null;
      if (ifLogicExp != null)
        msgs = ((InternalEObject)ifLogicExp).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ExTwentyOnePackage.EXPRESSION__IF_LOGIC_EXP, null, msgs);
      if (newIfLogicExp != null)
        msgs = ((InternalEObject)newIfLogicExp).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ExTwentyOnePackage.EXPRESSION__IF_LOGIC_EXP, null, msgs);
      msgs = basicSetIfLogicExp(newIfLogicExp, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ExTwentyOnePackage.EXPRESSION__IF_LOGIC_EXP, newIfLogicExp, newIfLogicExp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getThenExp()
  {
    return thenExp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetThenExp(Expression newThenExp, NotificationChain msgs)
  {
    Expression oldThenExp = thenExp;
    thenExp = newThenExp;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ExTwentyOnePackage.EXPRESSION__THEN_EXP, oldThenExp, newThenExp);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setThenExp(Expression newThenExp)
  {
    if (newThenExp != thenExp)
    {
      NotificationChain msgs = null;
      if (thenExp != null)
        msgs = ((InternalEObject)thenExp).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ExTwentyOnePackage.EXPRESSION__THEN_EXP, null, msgs);
      if (newThenExp != null)
        msgs = ((InternalEObject)newThenExp).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ExTwentyOnePackage.EXPRESSION__THEN_EXP, null, msgs);
      msgs = basicSetThenExp(newThenExp, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ExTwentyOnePackage.EXPRESSION__THEN_EXP, newThenExp, newThenExp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getElseExp()
  {
    return elseExp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetElseExp(Expression newElseExp, NotificationChain msgs)
  {
    Expression oldElseExp = elseExp;
    elseExp = newElseExp;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ExTwentyOnePackage.EXPRESSION__ELSE_EXP, oldElseExp, newElseExp);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setElseExp(Expression newElseExp)
  {
    if (newElseExp != elseExp)
    {
      NotificationChain msgs = null;
      if (elseExp != null)
        msgs = ((InternalEObject)elseExp).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ExTwentyOnePackage.EXPRESSION__ELSE_EXP, null, msgs);
      if (newElseExp != null)
        msgs = ((InternalEObject)newElseExp).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ExTwentyOnePackage.EXPRESSION__ELSE_EXP, null, msgs);
      msgs = basicSetElseExp(newElseExp, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ExTwentyOnePackage.EXPRESSION__ELSE_EXP, newElseExp, newElseExp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ExTwentyOnePackage.EXPRESSION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getBinding()
  {
    return binding;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBinding(Expression newBinding, NotificationChain msgs)
  {
    Expression oldBinding = binding;
    binding = newBinding;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ExTwentyOnePackage.EXPRESSION__BINDING, oldBinding, newBinding);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBinding(Expression newBinding)
  {
    if (newBinding != binding)
    {
      NotificationChain msgs = null;
      if (binding != null)
        msgs = ((InternalEObject)binding).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ExTwentyOnePackage.EXPRESSION__BINDING, null, msgs);
      if (newBinding != null)
        msgs = ((InternalEObject)newBinding).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ExTwentyOnePackage.EXPRESSION__BINDING, null, msgs);
      msgs = basicSetBinding(newBinding, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ExTwentyOnePackage.EXPRESSION__BINDING, newBinding, newBinding));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getBody()
  {
    return body;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBody(Expression newBody, NotificationChain msgs)
  {
    Expression oldBody = body;
    body = newBody;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ExTwentyOnePackage.EXPRESSION__BODY, oldBody, newBody);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBody(Expression newBody)
  {
    if (newBody != body)
    {
      NotificationChain msgs = null;
      if (body != null)
        msgs = ((InternalEObject)body).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ExTwentyOnePackage.EXPRESSION__BODY, null, msgs);
      if (newBody != null)
        msgs = ((InternalEObject)newBody).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ExTwentyOnePackage.EXPRESSION__BODY, null, msgs);
      msgs = basicSetBody(newBody, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ExTwentyOnePackage.EXPRESSION__BODY, newBody, newBody));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ExTwentyOnePackage.EXPRESSION__IF_LOGIC_EXP:
        return basicSetIfLogicExp(null, msgs);
      case ExTwentyOnePackage.EXPRESSION__THEN_EXP:
        return basicSetThenExp(null, msgs);
      case ExTwentyOnePackage.EXPRESSION__ELSE_EXP:
        return basicSetElseExp(null, msgs);
      case ExTwentyOnePackage.EXPRESSION__BINDING:
        return basicSetBinding(null, msgs);
      case ExTwentyOnePackage.EXPRESSION__BODY:
        return basicSetBody(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ExTwentyOnePackage.EXPRESSION__ACCESSED_DATA:
        return getAccessedData();
      case ExTwentyOnePackage.EXPRESSION__ACCESSED_FIELD:
        return getAccessedField();
      case ExTwentyOnePackage.EXPRESSION__IF_LOGIC_EXP:
        return getIfLogicExp();
      case ExTwentyOnePackage.EXPRESSION__THEN_EXP:
        return getThenExp();
      case ExTwentyOnePackage.EXPRESSION__ELSE_EXP:
        return getElseExp();
      case ExTwentyOnePackage.EXPRESSION__NAME:
        return getName();
      case ExTwentyOnePackage.EXPRESSION__BINDING:
        return getBinding();
      case ExTwentyOnePackage.EXPRESSION__BODY:
        return getBody();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ExTwentyOnePackage.EXPRESSION__ACCESSED_DATA:
        setAccessedData((String)newValue);
        return;
      case ExTwentyOnePackage.EXPRESSION__ACCESSED_FIELD:
        setAccessedField((String)newValue);
        return;
      case ExTwentyOnePackage.EXPRESSION__IF_LOGIC_EXP:
        setIfLogicExp((LogicExp)newValue);
        return;
      case ExTwentyOnePackage.EXPRESSION__THEN_EXP:
        setThenExp((Expression)newValue);
        return;
      case ExTwentyOnePackage.EXPRESSION__ELSE_EXP:
        setElseExp((Expression)newValue);
        return;
      case ExTwentyOnePackage.EXPRESSION__NAME:
        setName((String)newValue);
        return;
      case ExTwentyOnePackage.EXPRESSION__BINDING:
        setBinding((Expression)newValue);
        return;
      case ExTwentyOnePackage.EXPRESSION__BODY:
        setBody((Expression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ExTwentyOnePackage.EXPRESSION__ACCESSED_DATA:
        setAccessedData(ACCESSED_DATA_EDEFAULT);
        return;
      case ExTwentyOnePackage.EXPRESSION__ACCESSED_FIELD:
        setAccessedField(ACCESSED_FIELD_EDEFAULT);
        return;
      case ExTwentyOnePackage.EXPRESSION__IF_LOGIC_EXP:
        setIfLogicExp((LogicExp)null);
        return;
      case ExTwentyOnePackage.EXPRESSION__THEN_EXP:
        setThenExp((Expression)null);
        return;
      case ExTwentyOnePackage.EXPRESSION__ELSE_EXP:
        setElseExp((Expression)null);
        return;
      case ExTwentyOnePackage.EXPRESSION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case ExTwentyOnePackage.EXPRESSION__BINDING:
        setBinding((Expression)null);
        return;
      case ExTwentyOnePackage.EXPRESSION__BODY:
        setBody((Expression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ExTwentyOnePackage.EXPRESSION__ACCESSED_DATA:
        return ACCESSED_DATA_EDEFAULT == null ? accessedData != null : !ACCESSED_DATA_EDEFAULT.equals(accessedData);
      case ExTwentyOnePackage.EXPRESSION__ACCESSED_FIELD:
        return ACCESSED_FIELD_EDEFAULT == null ? accessedField != null : !ACCESSED_FIELD_EDEFAULT.equals(accessedField);
      case ExTwentyOnePackage.EXPRESSION__IF_LOGIC_EXP:
        return ifLogicExp != null;
      case ExTwentyOnePackage.EXPRESSION__THEN_EXP:
        return thenExp != null;
      case ExTwentyOnePackage.EXPRESSION__ELSE_EXP:
        return elseExp != null;
      case ExTwentyOnePackage.EXPRESSION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case ExTwentyOnePackage.EXPRESSION__BINDING:
        return binding != null;
      case ExTwentyOnePackage.EXPRESSION__BODY:
        return body != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (accessedData: ");
    result.append(accessedData);
    result.append(", accessedField: ");
    result.append(accessedField);
    result.append(", name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //ExpressionImpl
